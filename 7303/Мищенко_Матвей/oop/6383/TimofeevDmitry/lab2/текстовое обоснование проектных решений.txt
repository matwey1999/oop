1) По заданию, требуется реализовать систему классов, представляющих геометрические фигуры: Треугольник, Ромб, Параллелограмм, наследуумых от общего базового класса Shape.
2) Для внутреннего представления фигур будут использаваться соответствующие им вершины.
3) Поскольку при конструировании Параллелограмма и Ромба фигур по вершинам данные о всех 4 вершинах избыточны и потребуется проверка того, 
   что пользователь указал корректные данные,
   для этих фигур будут реализованы конструкторы не принимающие 4 вершины.
   Конструктор треугольника будет принимать в качестве параметров вершины треугольника.
   Конструктор ромба: будет инициализировать ромб в канонической системе координат, принимая в качестве параметров диагонали ромба.
   Конструктор параллелограмма: будет инициализировать параллелограмм в канонической системе координат, принимая в качестве параметров смежные стороны и угол между ними.
   В этом случае проверка на правильность инициализации каждой из фигур -- тривиальная, и конструкторы будут содержать минимально необходимое число независимых параметров.
4) Ромб будет наследоваться от параллелограмма в силу похожести свойств обоих фигур.
5) Цвета фигур будут для простоты содержать строку.
6) Поскольку все фигуры содержат внутри себя точки, то функции масштабирования, перемещения, поворота, будут реализованиы в базовом классе.
   Для обработки каждой точки базовый класс будет вызывать виртуальную функцию applyForAnyPoint(std::function<void(Point&)> const & f), которая дожна быть реализованиа следующим образом: функция f должна быть вызвана для каждой вершины.
      .